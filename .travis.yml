language: generic

env:
  global:
    - CONDA_ROOT=$HOME/miniconda
    - MINICONDA=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh


cache:
  directories:
    - CONDA_ROOT

os: linux
dist: bionic
services:
  - xvfb

install:
  - sudo apt-get update
  - if [[ ! -d ${CONDA_ROOT} ]]; then
      echo "Installing Miniconda...";
      wget $MINICONDA -O miniconda.sh &&
      bash miniconda.sh -b -p ${CONDA_ROOT};
    else
      echo "Using cached Miniconda install";
    fi
  - source "$HOME/miniconda/etc/profile.d/conda.sh"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - conda create -q -n testenv anaconda
  - conda activate testenv
  - conda install -c conda-forge pytest-notebook

script:
  - conda activate testenv
  - python clean-ipnb.py ./notebooks prepare4test
  - xvfb-run -a pytest -v --nb-test-files --nb-exec-timeout=30

before_deploy:
  - ls
  - conda activate testenv
  # restore after test loaded automagics
  - python clean-ipnb.py ./notebooks restore
  - python clean-ipnb.py ./notebooks delcode
  - git clean --force
  - find . -maxdepth 1 -type f -exec rm -fv {} \;
  - cp deploy/* .
  - rm -rf deploy/
  - rm -rf pdfs/
  - git add .
  - git commit -m "cleanup for deploy"
  - git log
deploy:
  provider: pages
  target_branch: course-material
  github_token: $GITHUB_TOKEN
  on:
    branch: master
